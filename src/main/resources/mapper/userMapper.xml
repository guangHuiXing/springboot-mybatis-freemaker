<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.UserMapper">
    <resultMap type="com.example.entity.User" id="userMap">
        <id column="id" property="id" />
        <result column="username" property="username" javaType="java.lang.String" />
        <result column="password" property="password" javaType="java.lang.String" />
        <result column="age" property="age" javaType="java.lang.Integer" />
        <result column="email" property="email" javaType="java.lang.String" />
    </resultMap>

    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, username,password, age, email
    </sql>
    <sql id="condition">
      <if test="username!= null and username != ''">
          and username = #{username}
      </if>
      <if test="password!= null and password != ''">
          and password = #{password}
      </if>
    </sql>

    <select id="selectAllUser" resultMap="userMap">
        select
        <include refid="Base_Column_List" />
        from user
    </select>
    <select id="findByPage" resultMap="userMap">
        select
        <include refid="Base_Column_List" />
        from user
        <where>
            <include refid="condition" />
        </where>
    </select>
    <select id="findById" parameterType="int" resultMap="userMap">
		select *
		from user where id = #{id}
	</select>
    <select id="findByName" parameterType="String" resultMap="userMap">
		select
		* from user where username=#{username}
	</select>
    <delete id="deleteUser" parameterType="int">
		delete from user
		where id =
		#{id}
	</delete>
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
		insert into user (username,password,age,email)
		values(#{username},#{password},#{age},#{email})
	</insert>
    <update id="updateUser" parameterType="com.example.entity.User">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
        </trim>
        where id = #{id}
    </update>

</mapper>